import random
import discord
from discord.ext import commands
from discord.ext.commands import BucketType
from discord.ext.commands import errors
from config import WHITELIST
from db import Database
import description


class User(commands.Cog):

    def __init__(self, client):
        self._client = client
        self.db = Database()

    @commands.Cog.listener()
    async def on_ready(self):
        print(f'User –∑–∞–≥—Ä—É–∂–µ–Ω.')

    @commands.command(name='personal-info', aliases=['pi', '–ª–∏—á–Ω–∞—è-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ª—Å'],
                      description=description.PERSONAL_INFO, help=description.PERSONAL_INFO)
    @commands.has_permissions(send_messages=True)
    @commands.cooldown(1, 30, type=BucketType.user)
    async def personal_info(self, ctx):
        await ctx.message.delete()
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ database
        voice_min, messages, money = self.db.select_one('users',
                                                        ('voice_min', 'messages', 'money'),
                                                        {'gid': ctx.guild.id,
                                                         'uid': ctx.author.id})
        embed = discord.Embed(title='–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                              description='',
                              timestamp=ctx.message.created_at,
                              colour=discord.Colour.from_rgb(255, 154, 0))
        embed.set_thumbnail(url=ctx.author.avatar_url)
        embed.add_field(name='Voice minutes:', value=f'``{voice_min}``', inline=False)
        embed.add_field(name='Messages:', value=f'``{messages}``', inline=False)
        embed.add_field(name='Money:', value=f'``{money}üíµ``', inline=False)
        await ctx.author.send(embed=embed)

    @personal_info.after_invoke
    async def reset_personal_info_cd(self, ctx):
        for role_id in WHITELIST:
            if role_id in [role.id for role in ctx.author.roles]:
                self.personal_info.reset_cooldown(ctx)

    @commands.command(name='level', aliases=['show-level'], description=description.USER_LEVEL,
                      help=description.USER_LEVEL)
    @commands.has_permissions(send_messages=True)
    @commands.cooldown(1, 30, type=BucketType.user)
    async def display_level(self, ctx, member: discord.Member = None):
        await ctx.message.delete()
        user = member or ctx.author
        exp, lvl = self.db.select_one('users',
                                      ('exp', 'lvl'),
                                      {'gid': ctx.guild.id,
                                       'uid': user.id})
        if lvl:
            await ctx.send(f'{user.display_name.mention} –∏–º–µ–µ—Ç {lvl} —É—Ä–æ–≤–µ–Ω—å —Å {exp}XP.')
        else:
            await ctx.send('–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —É—Ä–æ–≤–Ω—è.')

    @display_level.after_invoke
    async def reset_display_level_cd(self, ctx):
        for role_id in WHITELIST:
            if role_id in [role.id for role in ctx.author.roles]:
                self.display_level.reset_cooldown(ctx)

    @commands.command(aliases=['balance', '–±–∞–ª–∞–Ω—Å'], description=description.BALANCE, help=description.BALANCE)
    @commands.has_permissions(send_messages=True)
    async def _balance(self, ctx, member: discord.Member = None):
        await ctx.message.delete()
        user = member or ctx.author
        money, lvl, exp = self.db.select_one('users',
                                             ('money', 'lvl', 'exp'),
                                             {'gid': ctx.guild.id,
                                              'uid': user.id})
        embed = discord.Embed(description=f'**{user.display_name}**',
                              colour=ctx.author.colour)
        embed.set_thumbnail(url=user.avatar_url)
        embed.add_field(name='**üí∞Money Bag:**', value=f'``{money}üíµ``', inline=False)
        embed.add_field(name='**–£—Ä–æ–≤–µ–Ω—å:**', value=f'``{lvl}``', inline=False)
        embed.add_field(name='**–û–ø—ã—Ç:**', value=f'``{exp}``', inline=False)
        await ctx.send(embed=embed)

    @commands.command(aliases=['daily', 'bonus', '–±–æ–Ω—É—Å'], description=description.BONUS, help=description.BONUS)
    @commands.has_permissions(send_messages=True)
    @commands.cooldown(1, 86400, type=BucketType.user)
    async def gives_out_a_bonus(self, ctx):
        money = self.db.select_one('users',
                                   ('money',),
                                   {'gid': ctx.guild.id,
                                    'uid': ctx.author.id})[0]
        bonus = random.randint(10, 30)
        money += bonus
        self.db.update('users',
                       {'money': money},
                       {'gid': ctx.guild.id,
                        'uid': ctx.author.id})
        self.db.commit()
        await ctx.message.add_reaction('üí∏')

    @commands.command(aliases=['transfer', '–ø–µ—Ä–µ–≤–µ—Å—Ç–∏', '–ø–µ—Ä–µ–≤–æ–¥'],
                      description=description.TRANSFER, help=description.TRANSFER)
    @commands.has_permissions(send_messages=True)
    @commands.cooldown(1, 30, type=BucketType.user)
    async def transfers_money(self, ctx, member: discord.Member, amount: int):
        await ctx.messsage.delete()
        user_money = self.db.select_one('users',
                                        ('money',),
                                        {'gid': ctx.guild.id,
                                         'uid': ctx.author.id})[0]  # –ö—Ç–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç
        client_money = self.db.select_one('users',
                                          ('money',),
                                          {'gid': member.guild.id,
                                           'uid': member.id})[0]  # –ö–æ–º—É –ø–µ—Ä–µ–≤–æ–¥—è—Ç
        if amount < 0:
            raise errors.BadArgument
        else:
            user_money -= amount
            client_money += amount
            self.db.update('users',
                           {'money': user_money},
                           {'gid': ctx.guild.id,
                            'uid': ctx.author.id})
            self.db.update('users',
                           {'money': client_money},
                           {'gid': member.guild.id,
                            'uid': member.id})
            self.db.commit()

    @transfers_money.error
    async def transfer_error(self, ctx, error):
        if isinstance(error, errors.MissingRequiredArgument):
            embed = discord.Embed(description='–í—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.',
                                  colour=discord.Colour.red())
            embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)
        if isinstance(error, errors.BadArgument):
            embed = discord.Embed(description='–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n'
                                              '–ö–æ–ª-–≤–æ –≤–∞–ª—é—Ç—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –∏–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.',
                                  colour=discord.Colour.red())
            embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
            await ctx.send(embed=embed)

    @transfers_money.after_invoke
    async def reset_transfer_cd(self, ctx):
        for role_id in WHITELIST:
            if role_id in [role.id for role in ctx.author.roles]:
                self.transfers_money.reset_cooldown(ctx)


def setup(client):
    client.add_cog(User(client))
